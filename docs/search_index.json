[["index.html", "BIA1401 - 2024 - Laboratoire 4 Chapitre 1 Heatmap 1.1 Excercice 1 - Genérer un heat map avec toutes les bactéries 1.2 Excercice 2 - Générer le même heatmap mais avec uniquement vos trois inconnus", " BIA1401 - 2024 - Laboratoire 4 Chapitre 1 Heatmap 1.1 Excercice 1 - Genérer un heat map avec toutes les bactéries Télécharger le fichier metabolic.csv que vous trouverez dans le dossier Labo 4 de Moodle. Une fois télécharger, ouvrez R Studio et créer un nouveau script. Vérifier ensuite le répertoire de travail et assurez-vous que le fichier metabolic.csv s’y trouve (rappelez vous des commandes présentées au dernière laboratoire). Charger et installer les librairies Ce sript requiert l’utilisation des librairies suivantes. Il est fort probable que certaine de ces libraires ne soient pas instllées par défault, vous devrez donc utiliser l’onglet Packages afin de les installer. library(dplyr) library(reshape2) library(ggplot2) library(scales) Importer le fichier Vous pouvez maintenant importer la table de données metabolic.csv dans R avec la fonction read.table data = read.table(&quot;metabolic.csv&quot;, sep=&quot;,&quot;, header=TRUE, check.names=FALSE) Manipulation des données Afin de générer le heat map nous devons restructurer le tableau de données. Pour ce faire nous utiliserons la fonction metl. melted_df = melt(data) Je vous encourage maintenant à ouvrir ce tableau en cliquant sur celui-ci dans votre environnement et de comparer la disposition des données avec notre tableau original. Nous allons ensuite utiliser des fonctions de la librairies dplyr afin de transformer nos données. Nous groupons (group_by) en fonction des bactéries (colonne variable) et des modules (colonne module) Nous additionons les valeurs (fonction sum()), cette valeur sera conservée dans la nouvelle colonne Somme Nous dénombrons le nombre de rangé (fonction n()), cette valeur sera conservée dans la nouvelle colonne Compte) Afin de récupérer le nom des voies métaboliques associées aux différents modules nous dégroupons nos données (function ungroup()) summarized_df = melted_df %&gt;% group_by(variable, Module) %&gt;% mutate(Somme = sum(value)) %&gt;% mutate(Compte = n()) %&gt;% ungroup() Finalement nous allons transformer nos valeurs en pourcentage. Cela nous permettra d’évaluer si vos bactéries possèdes l’ensemble des gènes associées à chacun des modules des différentes voies métaboliques. Pour ce faire nous divisons les valeurs de la colonne Somme par les valeurs de la colonne Compte puis nous multiplions par 100. summarized_df$Prop = summarized_df$Somme / summarized_df$Compte * 100 Générer la figure Nous pouvons maintenant générer la figure de type heat map pour représenter les données. heatmap_tous = ggplot(summarized_df, aes(x = variable, y = Module, fill = Prop)) + geom_tile(stat = &quot;identity&quot;, color = &quot;white&quot;) + scale_fill_distiller(palette = &quot;Oranges&quot;, direction = 1, guide = guide_colourbar(nbin = 100, draw.ulim = FALSE, draw.llim = FALSE)) + labs(fill = &quot;Proportion de gènes présents (%)&quot; ) + facet_grid(rows = vars(Metabolism), scales = &quot;free_y&quot;, space = &quot;free_y&quot;, labeller = label_wrap_gen(15)) + scale_x_discrete(position = &quot;bottom&quot;, expand=c(0,0)) + scale_y_discrete(expand=c(0,0), labels = wrap_format(20)) + theme_classic() + theme(plot.margin = unit(c(top = 0.5, right = 0.5, bottom = 0, left = 0.5), &#39;lines&#39;), panel.border = element_rect(colour = &quot;black&quot;, fill = NA, linewidth = 1), axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 10), axis.text.y = element_text(size = 10), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank(), plot.title = element_blank(), legend.position =&quot;bottom&quot;, legend.text = element_text(size = 10), legend.title = element_text(size = 10, hjust=0), strip.text.y.right = element_text(size = 10, angle = 0), strip.background = element_blank()) Nous vous invitons à rechercher sur internet ce que fait chacun des paramètres et fonctions que nous utilisons avec la fonction ggplot(). On ne sait jamais, peut-être aurez vous à utiliser ces fonctions dans un future proche… Vous pouvez ensuite utiliser le symbole qui indique à R les commentaires pour annoter les fonctions et paramètres avec l’information que vous avez trouvé. Utilisez ensuite la fonction ggsave() pour enregistrer la figure produite. ggsave(filename = &quot;heat_map_all.png&quot;, plot = heatmap_tous, width = 10, height = 10, units = &quot;in&quot;, dpi = 500) 1.2 Excercice 2 - Générer le même heatmap mais avec uniquement vos trois inconnus Nous avons vue au dernier laboratoire l’utilisation de la fonction subset() pour extraire uniquement certaines données définies d’un tableau de données. Effectuez une recherche internet afin de trouver comment utiliser cette fonction pour extraire vos trois inconnus du tableau de données melted_df. Vous devez ensuite rouler de nouveau chacune des commandes suivantes avec ce nouveau tableau de données pour obtenir un heat map avec uniquement vos trois inconnus. Cette figure est à inclure dans votre rapport de laboratoire. Bonne chance ! "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
